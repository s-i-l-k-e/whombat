services:
  reverse-proxy:
    image: traefik:v3.1
    container_name: whombat-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.fields.headers.defaultmode=keep"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-acme:/acme.json:rw
    command:
      - "sh"
      - "-c"
      - "chmod 600 /acme.json && traefik --api.insecure=true --providers.docker ..."

    networks:
      - public

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: whombat-backend
    command: ["whombat"]
    environment:
      - WHOMBAT_DATA_DIR=/data/
      - WHOMBAT_DB_DIALECT=postgresql
      - WHOMBAT_DB_USERNAME=${POSTGRES_USER?Variable not set}
      - WHOMBAT_DB_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - WHOMBAT_DB_NAME=${POSTGRES_DB?Variable not set}
      - WHOMBAT_DB_HOST=db
      - WHOMBAT_DB_PORT=5432
      - WHOMBAT_DOMAIN=${DOMAIN}
      - WHOMBAT_AZURE_TENANT_ID=${AZURE_AD_TENANT_ID}
      - WHOMBAT_AZURE_CLIENT_ID=${AZURE_AD_BACKEND_CLIENT_ID}
      - WHOMBAT_AUDIO_DIR=/audio
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`) && !PathPrefix(`/api/auth`)"
      - "traefik.http.routers.backend.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "traefik.http.routers.backend.tls=${TRAEFIK_TLS}"
      - "traefik.http.routers.backend.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"
      - "traefik.http.routers.backend.priority=2"
      - "traefik.http.routers.backend-redirect.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`) && !PathPrefix(`/api/auth`)"
      - "traefik.http.routers.backend-redirect.entrypoints=web"
      - "traefik.http.routers.backend-redirect.middlewares=${TRAEFIK_REDIRECT_MIDDLEWARE}"
      - "traefik.http.routers.backend.middlewares=auth-headers"
    volumes:
      - type: volume
        source: db-data
        target: /data
      - type: bind
        source: ${AUDIO_DIR}
        target: /audio
    depends_on:
      db:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully
    networks:
      - public
      - private

  prestart:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: whombat-prestart
    command: alembic upgrade head
    environment:
      - WHOMBAT_DB_DIALECT=postgresql
      - WHOMBAT_DB_USERNAME=${POSTGRES_USER?Variable not set}
      - WHOMBAT_DB_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - WHOMBAT_DB_NAME=${POSTGRES_DB?Variable not set}
      - WHOMBAT_DB_HOST=db
      - WHOMBAT_DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - private

  db:
    image: postgres
    container_name: whombat-db
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - private

  frontend:
    build:
      context: front
      args:
        - NEXT_PUBLIC_BACKEND_HOST=${NEXT_PUBLIC_BACKEND_HOST}
        - NEXTAUTH_URL=${NEXTAUTH_URL}
        - AZURE_AD_CLIENT_ID=${AZURE_AD_FRONTEND_CLIENT_ID}
        - AZURE_AD_CLIENT_SECRET=${AZURE_AD_CLIENT_SECRET}
        - AZURE_AD_TENANT_ID=${AZURE_AD_TENANT_ID}
        - AZURE_AD_API_SCOPE=${AZURE_AD_API_SCOPE}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    container_name: whombat-frontend
    command: ["npx", "pnpm", "dev"]
    environment:
      - NEXT_PUBLIC_BACKEND_HOST=${NEXT_PUBLIC_BACKEND_HOST}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=${TRAEFIK_ENTRYPOINT}"
      - "traefik.http.routers.frontend.tls=${TRAEFIK_TLS}"
      - "traefik.http.routers.frontend.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend.priority=1"
      - "traefik.http.routers.frontend-redirect.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend-redirect.entrypoints=web"
      - "traefik.http.routers.frontend-redirect.middlewares=${TRAEFIK_REDIRECT_MIDDLEWARE}"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
    depends_on:
      - backend
    networks:
      - public

networks:
  public:
  private:
  
volumes:
  db-data:
  traefik-acme: